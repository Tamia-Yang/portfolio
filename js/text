(function ($) {
    $.defaults = {
        key: undefined,
        gallery: "#gallery",
        search: "#search",
        count: 50
    }

    $.fn.myFlickr = function (opt) {
        opt = $.extend({}, $.defaults, opt);
        if (opt.key == undefined) {
            console.error("key는 필수 입력 사항입니다.");
        }
        new Flickr(this, opt);
        return this;
    }

    function Flickr(el, opt) {
        this.init(el, opt);
        this.bindingEvent();
    }

    Flickr.prototype.init = function (el, opt) {
        this.url = "https://www.flickr.com/services/rest/?method=flickr.interestingness.getList";
        this.url_search = "https://www.flickr.com/services/rest/?method=flickr.photos.search";
        this.key = opt.key;
        this.count = opt.count;
        this.gallery = el.find(opt.gallery); //$("#wrap").find("#gallery")
        this.search = el.find(opt.search);
    }

    Flickr.prototype.bindingEvent = function () {
        this.getList(this.url, this.key, this.count);

        //"#search"
        console.log(this.search);
        var btn = $(this.search.selector).children("button");

        btn.on("click", function (e) {
            e.preventDefault();
            this.searchTag();
        }.bind(this));

        $(window).on("keypress", function (e) {
            if (e.keyCode == 13) this.searchTag();
        }.bind(this));

        $("body").on("click", "#gallery li a", function (e) {
            e.preventDefault();

            var imgSrc = $(e.currentTarget).attr("href");
            this.createPop(imgSrc);
        }.bind(this));

        $("body").on("click", ".pop span", function () {
            $(".pop").fadeOut(500, function () {
                $(".pop").remove();
            })
        })

    }

    Flickr.prototype.getList = function (url, key, num, tags) {
        $.ajax({
            url: url,
            dataType: "json",
            data: {
                api_key: key,
                per_page: num,
                format: "json",
                nojsoncallback: 1,
                tags: tags,
                tagmode: "any",
                privacy_filter: 5
            }
        })
            .success(function (data) {
                var item = data.photos.photo;
                this.createList(item);
            }.bind(this))
            .error(function (err) {
                console.error(err);
            })
    }

    Flickr.prototype.createList = function (data) {
        var $gallery = $(this.gallery.selector);

        //var frame = $gallery.find("ul").selector;
        //var list = $gallery.find("li");
        //var list_name = list.selector;         

        $gallery.empty();
        $gallery.append("<ul>");

        //무조건 첫번째 li를  item-sizer  클래스 지정해서 동적 생성

        $gallery.children("ul").append("<li class='item-sizer'>");

        //ajax로 받아진 데이터 갯수만큼 반복을 돌려 리스트 생성
        $(data).each(function (index, data) {
            var text = data.title;
            if (!data.title) text = "No description in this photo.";

            $gallery.children("ul").append(
                $("<li class='item'>").append(
                    $("<div class='inner'>")
                        .append(
                            $("<a>").attr({
                                href: "https://live.staticflickr.com/" + data.server + "/" + data.id + "_" + data.secret + "_b.jpg"
                            }).append(
                                $("<img>").attr({
                                    src: "https://live.staticflickr.com/" + data.server + "/" + data.id + "_" + data.secret + "_w.jpg",
                                    onerror: "javascript:this.parentNode.parentNode.parentNode.style='display:none;'"
                                })
                            )
                        )
                        .append(
                            $("<p>").text(text)
                        )
                        .append(
                            $("<div class='profile'>")
                                .append(
                                    $("<img>").attr({ src: "https://www.flickr.com/buddyicons/" + data.owner + ".jpg" }),
                                    $("<span>").text(data.owner)
                                )
                        )

                )
            )
        }.bind(this));

        //리스트 생성 완료시 isotope레이아웃 적용
        this.isoLayout();
    }

    Flickr.prototype.isoLayout = function () {
        var $gallery = $(this.gallery.selector);   //$("#gallery")   
        var frame = $gallery.find("ul").selector;  //"#gallery ul"
        var list = $gallery.find("li"); // $("#gallery li")
        var list_name = list.selector;  //"#gallery li"
        var imgs = $gallery.find("img");  //$("#gallery img")  
        var imgNum = 0;

        //만들어진 img요소의 갯수만큼 반복을 돔
        $(imgs).each(function (index, data) {
            //해당 img요소의 실제 이미지소스가 로딩이 완료되면
            data.onload = function () {
                //해당 imgNum의 카운트를 증가시킴
                imgNum++;

                //이미지요소의 갯수와 == 이미지소스의 갯수가 동일하면
                //(모든 이미지소스들이 화면에 로딩이 완료되면 그떄 Isotope플러그인 적용시작)
                if (imgNum === imgs.length) {
                    new Isotope(frame, {
                        itemSelector: ".item",
                        percentPosition: true,
                        masonary: {
                            columnWidth: ".item-sizer",
                        }
                        transitionDuration: "0.8s"
                    });

                    //모든 isotope레이아웃이 보기좋게 완료되고 나면 그때 프레임 gallery를 활성화 시켜서 보이게
                    $gallery.addClass("on");
                    //그와 동시에 로딩바는 비화성화 시켜서 숨김
                    $(".loading").removeClass("on");
                }
            }
        }.bind(this));
    }

    Flickr.prototype.searchTag = function () {
        var inputs = $(this.search.selector).children("input").val();
        if (inputs == "") {
            alert("검색어를 입력해주세요.");
            return;
        }

        $("#gallery").removeClass("on");
        $(".loading").addClass("on");

        this.getList(this.url_search, this.key, this.count, inputs);
        $(this.search.selector).children("input").val("");
    }

    Flickr.prototype.createPop = function (imgSrc) {
        $("body").append(
            $("<aside class='pop'>")
                .css({
                    width: '100%', height: "100%", position: "fixed", top: 0, left: 0, zIndex: 10,
                    boxSizing: "border-box", padding: "5vw", background: "rgba(0,0,0,0.9)", display: "none"
                })
                .append(
                    $("<img>").attr("src", imgSrc).css({
                        width: "100%", height: "100%", objectFit: "cover"
                    }),
                    $("<span>").text("close").css({
                        cursor: "pointer", color: "#fff", position: "absolute", top: 20, right: 20
                    })
                ).fadeIn()
        )
    }


})(jQuery);